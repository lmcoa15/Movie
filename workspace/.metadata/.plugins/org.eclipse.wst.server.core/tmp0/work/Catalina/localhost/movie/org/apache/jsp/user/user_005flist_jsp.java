/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.26
 * Generated at: 2015-12-08 15:23:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import movie.admin.*;

public final class user_005flist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("movie.admin");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\n');
      out.write('\n');
      java.util.ArrayList datas = null;
      datas = (java.util.ArrayList) _jspx_page_context.getAttribute("datas", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (datas == null){
        datas = new java.util.ArrayList();
        _jspx_page_context.setAttribute("datas", datas, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("datas"), request);
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/movie_list_css.css\" type=\"text/css\" media=\"screen\" />\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>상영 영화 리스트</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div align=\"center\">\n");
      out.write("<h2>상영 영화 리스트</h2>\n");
      out.write("\n");
      out.write("<form name=form1 method=request  action=\"user_login.jsp\">\n");
      out.write("<table border=\"1\">\n");
      out.write("\t<tr><th>타이틀</th><th>이미지</th>\n");
      out.write("\t<th>관람가</th><th>총 좌석수</th>\n");
      out.write("\t<th>상영기간</th><th>예매(ID)</th>\n");
      out.write("\t<hr></tr>\n");
      out.write("\t\n");
      out.write("\t");
	
		String img;
		for(film ab:(ArrayList<film>) datas){
			img=ab.getName_film();	
	
      out.write("\n");
      out.write("\t<tr>\n");
      out.write("\t<td>");
      out.print(ab.getName_film() );
      out.write("</td>\n");
      out.write("\t");
 if(img.equals("aboutTime")) {
      out.write("\n");
      out.write("\t<td><img src=\"../image/aboutTime.jpg\" width=70 height=70 /></td>\n");
      out.write("\t");
 }else if(img.equals("star wars")) {
      out.write("\n");
      out.write("\t<td><img src=\"../image/star wars.jpg\" /></td>\n");
      out.write("\t");
 }else if(img.equals("Damage")) {
      out.write("\n");
      out.write("\t<td><img src=\"../image/Damage.jpg\" /></td>\n");
      out.write("\t");
 }else if(img.equals("Hobbit")) {
      out.write("\n");
      out.write("\t<td><img src=\"../image/Hobbit.jpg\" /></td>\n");
      out.write("\t");
 }else if(img.equals("LesMiserables")) {
      out.write("\n");
      out.write("\t<td><img src=\"../image/LesMiserables.jpg\" /></td>\n");
      out.write("\t");
 }else if(img.equals("martian")){
      out.write("\n");
      out.write("\t<td><img src=\"../image/martian.jpg\" /></td>\n");
      out.write("\t");
 }else if(img.equals("Monster")){
      out.write("\n");
      out.write("\t<td><img src=\"../image/Monster.jpg\" /></td>\n");
      out.write("\t");
 }else if(img.equals("Mother")){
      out.write("\n");
      out.write("\t<td><img src=\"../image/Mother.jpg\" /></td>\n");
      out.write("\t");
 }else if(img.equals("Sevendays")){
      out.write("\n");
      out.write("\t<td><img src=\"../image/Sevendays.jpg\" /></td>\n");
      out.write("\t");
 }else if(img.equals("Titanic")){
      out.write("\n");
      out.write("\t<td><img src=\"../image/Titanic.jpg\" /></td>\n");
      out.write("\t");
 }else if(img.equals("Blackswan")){
      out.write("\n");
      out.write("\t<td><img src=\"../image/Blackswan.jpg\" /></td>\n");
      out.write("\t");
 }else{
      out.write("\n");
      out.write("\t<td>이미지 없음</td>\n");
      out.write("\t");
} 
      out.write("\n");
      out.write("\t\n");
      out.write("\t\n");
      out.write("\t<td>");
      out.print(ab.getAge_phase() );
      out.write("</td>\n");
      out.write("\t<td>");
      out.print(ab.getSeat_num() );
      out.write("</td>\n");
      out.write("\t<td>");
      out.print(ab.getWatch_date() );
      out.write("</td>\n");
      out.write("\t<td><input type=\"Submit\" name=\"id_film\" value=\"");
      out.print(ab.getId_film() );
      out.write("\"></td>\n");
      out.write("\n");
      out.write("\t</tr>\n");
      out.write("\t");

		}
	
      out.write("\n");
      out.write("</table>\n");
      out.write("</form>\n");
      out.write("</div>\n");
      out.write("\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
