/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.26
 * Generated at: 2015-12-09 11:39:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.user;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import movie.admin.*;
import java.util.*;

public final class membership_005fcontrol_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("movie.admin");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("    \n");
      out.write(" ");
      movie.admin.MembershipBean gb = null;
      gb = (movie.admin.MembershipBean) _jspx_page_context.getAttribute("gb", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (gb == null){
        gb = new movie.admin.MembershipBean();
        _jspx_page_context.setAttribute("gb", gb, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
      out.write(' ');
      movie.admin.membership _membership = null;
      _membership = (movie.admin.membership) _jspx_page_context.getAttribute("_membership", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (_membership == null){
        _membership = new movie.admin.membership();
        _jspx_page_context.setAttribute("_membership", _membership, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write('\n');
      out.write(' ');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspect(_jspx_page_context.findAttribute("_membership"), request);
      out.write('\n');
      out.write('\n');
 
	String action=request.getParameter("action");
	String films_id=request.getParameter("films_id");
	
	
	
	//로그인시 
	if(action.equals("login")){ 
		
		membership memberships=gb.getDB(_membership.getName_mem());
		String pass_word=memberships.getPassword();
		
		//입력 정보 확인
		if(_membership.getName_mem()!= null && _membership.getPassword()!=null){
			//회원 정보 확인
			if(!gb.confirmDB(_membership.getName_mem())){
				
					if(pass_word.equals(_membership.getPassword())){
						/* request.setAttribute("action","confim"); */
						
						  
						pageContext.forward("user_login_confirm.jsp?films_id="+films_id+"&user_id="+_membership.getName_mem());
					
					}else{
						System.out.println("회원 정보가 일치하지 않습니다.");
						
						pageContext.forward("user_login.jsp");
						}
			}
			else{
					System.out.println("회원 가입이 되어 있지 않습니다.");
					pageContext.forward("user_login.jsp");
				}
		}
		else{
			System.out.println("회원정보를 모두 입력하지 않았습니다.");
			pageContext.forward("user_login.jsp");
		}
	}
	
	//회원가입시
	else if(action.equals("confirm"))
	{ 
		System.out.println("confirm 입장");
		String password_confirm=request.getParameter("password_confirm");
		
		//id,비밀번호, 나이 미기입시 오류처리
		if(_membership.getAge_mem()!=0 && _membership.getName_mem()!=null & _membership.getPassword()!=null){
			
			//비밀번호 더블 체크
			if(password_confirm.equals(_membership.getPassword())){
				
				//아이디 중복 체크
				if(gb.confirmDB(_membership.getName_mem())){
					if(gb.insertDB(_membership)){
						System.out.println("회원가입 성공");
						response.sendRedirect("film_control.jsp?action=list");
						}else
	 						throw new Exception("DB 입력 오류");
				}
				else{
					System.out.println("중복되는 아이디가 존재합니다.");
					pageContext.forward("user_membership.jsp");
				}
			}
			else{
					System.out.println("비밀번호와 비밀번호 확인이 일치하지 않습니다.");
					pageContext.forward("user_membership.jsp");	
				}
			
				}
		else{
					System.out.println("정보를 모두 입력하지 않았습니다.");
					pageContext.forward("user_membership.jsp");
			}
	}
	
	//회원 정보 변경
	else if(action.equals("change")){
		System.out.println("change 입장");
		String password_confirm=request.getParameter("password_confirm");
		
		//id,비밀번호, 나이 미기입시 오류처리
		if(_membership.getAge_mem()!=0 &&_membership.getPassword()!=null){
			
			//비밀번호 더블 체크
			if(password_confirm.equals(_membership.getPassword())){
				
				//업데이트
				
					if(gb.updateDB(_membership)){
						System.out.println("업데이트 성공");
						pageContext.forward("seat_no_control.jsp??films_id="+films_id+"user_id="+_membership.getName_mem()+"action=confirm");
						}else
	 						throw new Exception("DB 입력 오류");
				
				
			}
			else{
					System.out.println("비밀번호와 비밀번호 확인이 일치하지 않습니다.");
					pageContext.forward("user_login_confirm.jsp");	
				}
			
				}
		else{
					System.out.println("정보를 모두 입력하지 않았습니다.");
					pageContext.forward("user_login_confirm.jsp");
			}
	}
	
	// 변경 안하고 입장
	else if(action.equals("enter")){
		System.out.println("변경 안하고 입장 완료");
		pageContext.forward("seat_no_control.jsp???films_id="+films_id+"user_id="+_membership.getName_mem()+"action=confirm");
	}
	
	//로그아웃
	else if(action.equals("exit")){
		pageContext.forward("film_control.jsp?action=list");
	}
	
	//회원가입 비밀번호 확인후 새롭게 생성
 	else if(action.equals("insert")){ 
 		System.out.println("insert 입장");

 		if(gb.insertDB(_membership)){
 			response.sendRedirect("user_reservation.jsp");
 		}
 		else
 			throw new Exception("DB 입력 오류");
 	}
 	else if(action.equals("delete")){

 		if(gb.deleteDB(_membership.getId_mem())){
 			//response.sendRedirect("film_control.jsp?action=list");
 		}else
 			throw new Exception("DB 삭제 오류");
 	}
	
	//else if(action.equals("update")){
	 	//}
 
      out.write("\n");
      out.write("<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n");
      out.write("<title>Insert title here</title>\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
